stages:
- initial
- scan
- build
- deploy
- test
include:
- project: iiidevops-templates/ci-template
  file: job/Android.gitlab-ci.yml
- project: iiidevops-templates/ci-template
  file: ci/template.gitlab-ci.yml
Test--SonarQube source code scan:
  variables:
    iiidevops: sonarqube
    CHART_TYPE: gradle
  only:
  - master
Test--Checkmarx source code scan:
  variables:
    iiidevops: checkmarx
  only:
  - master
.job-extend-android:
  variables:
    iiidevops: cmas
  only:
  - master
Build image:
  variables:
    iiidevops: deployed-environments
  needs:
  - Build--AndroidLintDebug
  - Build--AndroidDebugApp
  only:
  - master
Build--Scan docker image:
  variables:
    iiidevops: deployed-environments
  only:
  - master
Deploy--Set environment and wait deployment:
  variables:
    iiidevops: deployed-environments
  only:
  - master
Deploy--Web:
  variables:
    iiidevops: deployed-environments
    CHART_WEB_PORT: 80
    CHART_PROXY_BODY_SIZE: 1m
  only:
  - master
Test--Anchore SBOM:
  variables:
    iiidevops: anchore
  only:
  - master
Test--CMAS APK scan:
  stage: test
  allow_failure: true
  variables:
    iiidevops: cmas
    CHART_NAME: ${CI_PROJECT_NAME}-${CI_COMMIT_BRANCH}-cmas
    CHART_VERSION: 0.0.5
    CMAS_A_MODE: '24'
    CMAS_A_ERT: '90'
  cache:
    paths:
    - common.yaml
    policy: pull
  image:
    name: alpine/k8s:1.25.9
    entrypoint:
    - ''
  before_script:
  - apk add --update curl
  - 'TOKEN="$(curl -s -L -X POST ${IIIDEV_URL}/user/login -H "Content-Type: application/json"
    -d ''{"username": "''"${BOT_USERNAME}"''","password":"''"${BOT_PASSWORD}"''"}''
    | jq -r ''.data.token'')"

    '
  - curl -s -L -X POST ${IIIDEV_URL}/project/${CI_PROJECT_NAME}/pipeline_file -H "Authorization:Bearer
    $TOKEN" -F commit_short_id=${CI_COMMIT_SHORT_SHA} -F sequence=0 -F upload_file=@"./app/build/outputs/apk/debug/app-debug.apk"
  - echo "Upload APK file done!"
  - kubectl config get-contexts
  - kubectl config use-context $(kubectl config get-contexts -o name)
  script:
  - helm delete -n ${CI_PROJECT_NAME} ${CHART_NAME} || exit_code=$?
  - helm install -n ${CI_PROJECT_NAME} ${CHART_NAME} -f common.yaml ${HARBOR_CHART_REGISTRY}/scan-cmas
    --set cmas.a_mode=${CMAS_A_MODE} --set cmas.a_ert=${CMAS_A_ERT} --version ${CHART_VERSION}
  only:
  - master
  except:
    variables:
    - $CI_COMMIT_MESSAGE =~ /.*\(store\)$/

stages:
- name: Integration--initial pipeline
  iiidevops: initial-pipeline
  steps:
  - envFrom:
    - sourceKey: api-origin
      sourceName: nexus
      targetKey: api_origin
    runScriptConfig:
      image: iiiorg/iiidevops-cli:0.0.4
      shellScript: curl --location -s --request POST ${api_origin}/rancher/delete_app
        --form project_name=${CICD_GIT_REPO_NAME} --form branch_name=${CICD_GIT_BRANCH}
        && curl --location -s --request POST ${api_origin}/project/issues_commit_by_name
        --form project_name=${CICD_GIT_REPO_NAME} && count-src.pl
- name: Test--SonarQube for Java(Android)
  iiidevops: sonarqube
  steps:
  - applyAppConfig:
      answers:
        git.branch: ${CICD_GIT_BRANCH}
        git.commitID: ${CICD_GIT_COMMIT}
        git.repoName: ${CICD_GIT_REPO_NAME}
        git.url: ${CICD_GIT_URL}
        harbor.host: harbor-dev3.iiidevops.org
        pipeline.sequence: ${CICD_EXECUTION_SEQUENCE}
        type: gradle
      catalogTemplate: cattle-global-data:iii-dev-charts3-scan-sonarqube
      name: ${CICD_GIT_REPO_NAME}-${CICD_GIT_BRANCH}-sq
      targetNamespace: ${CICD_GIT_REPO_NAME}
      version: 0.3.1
  when:
    branch:
      include:
      - master
- name: Test--Checkmarx source code scan
  iiidevops: checkmarx
  steps:
  - applyAppConfig:
      answers:
        git.branch: ${CICD_GIT_BRANCH}
        git.commitID: ${CICD_GIT_COMMIT}
        git.repoName: ${CICD_GIT_REPO_NAME}
        git.url: ${CICD_GIT_URL}
        harbor.host: harbor-dev3.iiidevops.org
        pipeline.sequence: ${CICD_EXECUTION_SEQUENCE}
      catalogTemplate: cattle-global-data:iii-dev-charts3-scan-checkmarx
      name: ${CICD_GIT_REPO_NAME}-${CICD_GIT_BRANCH}-cmx
      targetNamespace: ${CICD_GIT_REPO_NAME}
      version: 0.3.1
  when:
    branch:
      include:
      - master
- name: Build--APK for Java(Gradle)
  iiidevops: deployed-environments
  steps:
  - runScriptConfig:
      image: library/gradle:jdk11
      shellScript: chmod 777 Dockerfile.sh; ./Dockerfile.sh
  when:
    branch:
      include:
      - master
- name: Deploy--Set Web environment variables
  iiidevops: deployed-environments
  steps:
  - envFrom:
    - sourceKey: API_TOKEN
      sourceName: pipeline-api-key
      targetKey: rancher_api_token
    - sourceKey: rancher-url
      sourceName: rancher
      targetKey: rancher_url
    runScriptConfig:
      image: iiiorg/iiidevops-cli:0.0.4
      shellScript: rancher login ${rancher_url} -t ${rancher_api_token} --skip-verify
        && rancher kubectl delete configmap -n ${CICD_GIT_REPO_NAME} ${CICD_GIT_REPO_NAME}-${CICD_GIT_BRANCH}-env
        --ignore-not-found=true && chk-app-env.pl && rancher kubectl create configmap
        -n ${CICD_GIT_REPO_NAME} ${CICD_GIT_REPO_NAME}-${CICD_GIT_BRANCH}-env --from-env-file=iiidevops/app.env
        && rancher kubectl annotate configmap -n ${CICD_GIT_REPO_NAME} ${CICD_GIT_REPO_NAME}-${CICD_GIT_BRANCH}-env
        iiidevops.org/project_name=${CICD_GIT_REPO_NAME} iiidevops.org/branch=${CICD_GIT_BRANCH}
        iiidevops.org/commit_id=${CICD_GIT_COMMIT} iiidevops.org/type=appenv
  when:
    branch:
      include:
      - master
- name: Build--Build and push docker image
  iiidevops: deployed-environments
  steps:
  - env:
      PLUGIN_BUILD_ARGS: --progress=tty --network=host
      PLUGIN_DEBUG: 'true'
      PLUGIN_INSECURE: 'true'
      PLUGIN_MIRROR: https://harbor-dev3.iiidevops.org
      PLUGIN_MTU: '1000'
    publishImageConfig:
      buildContext: .
      dockerfilePath: ./Dockerfile
      pushRemote: true
      registry: harbor-dev3.iiidevops.org
      tag: ${CICD_GIT_REPO_NAME}/${CICD_GIT_BRANCH}:${CICD_GIT_COMMIT}
  when:
    branch:
      include:
      - master
- name: Build--Scan docker image
  iiidevops: deployed-environments
  steps:
  - envFrom:
    - sourceKey: api-origin
      sourceName: nexus
      targetKey: api_origin
    runScriptConfig:
      image: iiiorg/iiidevops-cli:0.0.4
      shellScript: curl --location -s --request POST ${api_origin}/v2/harbor/${CICD_GIT_REPO_NAME}/scan
        --form branch=${CICD_GIT_BRANCH} --form commit_id=${CICD_GIT_COMMIT}
  when:
    branch:
      include:
      - master
- name: Deploy--Web
  iiidevops: deployed-environments
  steps:
  - applyAppConfig:
      answers:
        git.branch: ${CICD_GIT_BRANCH}
        git.commitID: ${CICD_GIT_COMMIT}
        git.repoName: ${CICD_GIT_REPO_NAME}
        git.url: ${CICD_GIT_URL}
        harbor.host: harbor-dev3.iiidevops.org
        imagePullSecrets[0].name: harbor-local
        pipeline.sequence: ${CICD_EXECUTION_SEQUENCE}
        web.imageTag: ${CICD_GIT_REPO_NAME}/${CICD_GIT_BRANCH}:${CICD_GIT_COMMIT}
        web.port: 80
        kube.ingress.base_domain: ingress-dev3.iiidevops.org
        kube.ingress.proxy_body_size: 1m
        volumeMounts.nfs.enabled: false
        volumeMounts.nfs.server: 10.20.0.100
        volumeMounts.project: ${CICD_GIT_REPO_NAME}
        volumeMounts.uuid: fca2b994-b212-11ec-9a09-5ed3230a7360
        volumeMounts.mountPath: /usr/src/app/files
      catalogTemplate: cattle-global-data:iii-dev-charts3-web
      name: ${CICD_GIT_REPO_NAME}-${CICD_GIT_BRANCH}-serv
      targetNamespace: ${CICD_GIT_REPO_NAME}
      version: 0.5.13
  when:
    branch:
      include:
      - master
- name: Deploy--Wait Web deployment
  iiidevops: deployed-environments
  steps:
  - env:
      deploy_name: ${CICD_GIT_REPO_NAME}-${CICD_GIT_BRANCH}-serv
      max_wait: 128
      namespace: ${CICD_GIT_REPO_NAME}
    envFrom:
    - sourceKey: API_TOKEN
      sourceName: pipeline-api-key
      targetKey: rancher_api_token
    - sourceKey: rancher-url
      sourceName: rancher
      targetKey: rancher_url
    runScriptConfig:
      image: iiiorg/iiidevops-cli:0.0.4
      shellScript: rancher login ${rancher_url} -t ${rancher_api_token} --skip-verify;
        deploy-wait.pl
  when:
    branch:
      include:
      - master
- name: Test--Cmas APK scan pre-processing
  iiidevops: cmas
  steps:
  - envFrom:
    - sourceKey: API_TOKEN
      sourceName: pipeline-api-key
      targetKey: rancher_api_token
    - sourceKey: rancher-url
      sourceName: rancher
      targetKey: rancher_url
    - sourceKey: api-origin
      sourceName: nexus
      targetKey: api_origin
    runScriptConfig:
      image: iiiorg/iiidevops-cli:0.0.4
      shellScript: rancher login ${rancher_url} -t ${rancher_api_token} --skip-verify
        && export PW=$(rancher kubectl get secret nexus-bot -n ${CICD_GIT_REPO_NAME}
        -o=go-template='{{index .data "password"}}' | base64 -d) && export UN=$(rancher
        kubectl get secret nexus-bot -n ${CICD_GIT_REPO_NAME} -o=go-template='{{index
        .data "username"}}' | base64 -d) && curl --location --request POST ${api_origin}/user/login
        --form username=$UN --form password=$PW | jq -r '.data.token' > token.txt
        && export APITOKEN=$(cat token.txt) && pwd && ls -lR ./app/build/outputs/apk/
        && curl --location --request POST ${api_origin}/project/${CICD_GIT_REPO_NAME}/pipeline_file
        --header "Authorization:Bearer $APITOKEN" --form commit_short_id=${CICD_GIT_COMMIT}
        --form sequence=${CICD_EXECUTION_SEQUENCE} --form upload_file=@"./app/build/outputs/apk/debug/app-debug.apk"
  when:
    branch:
      include:
      - master
- name: Test--Cmas APK scan
  iiidevops: cmas
  steps:
  - applyAppConfig:
      answers:
        git.branch: ${CICD_GIT_BRANCH}
        git.commitID: ${CICD_GIT_COMMIT}
        git.repoName: ${CICD_GIT_REPO_NAME}
        git.url: ${CICD_GIT_URL}
        pipeline.sequence: ${CICD_EXECUTION_SEQUENCE}
        harbor.host: harbor-dev3.iiidevops.org
      catalogTemplate: cattle-global-data:iii-dev-charts3-scan-cmas
      name: ${CICD_GIT_REPO_NAME}-${CICD_GIT_BRANCH}-cmas
      targetNamespace: ${CICD_GIT_REPO_NAME}
      version: 0.0.3
  when:
    branch:
      include:
      - master
